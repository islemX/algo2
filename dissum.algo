ALGORITHM ov sum
VAR
    set1: ARRAY_OF INTEGER[4];
    set2 : ARRAY_OF INTEGER[4];
    sum:INTEGER;
    check:BOOLEAN;
BEGIN

  exist:=false;
  sum:=0;

  FOR i FROM 0 TO set1.length-1 STEP1  DO
      FOR j FROM 0 TO set2.length-1 STEP1  DO
        IF(set1[i]<>set2[j]) THEN
          check:=true;
        END_IF 
        IF (check=true) THEN
          sum:=sum+set1[i]
          writeln(set1[i])
        END_IF
      END_FOR
  END_FOR
  FOR i FROM 0 TO set2.length-1 STEP1  DO
      FOR j FROM 0 TO set1.length-1 STEP1  DO
        IF(set1[j]<>set2[i]) THEN
          check:=true;
        END_IF 
        IF (check=true) THEN
          sum:=sum+set2[i]
          writeln(set2[i])
        END_IF
      END_FOR
  END_FOR
    writeln("sum is ",sum)
  END





 //solution2
 ALGORITHM sum_ov
VAR
    h:HASH_TABLE<INTEGER,INTEGER>;
    i,sum,count:INTEGER;
    set1: ARRAY_OF INTEGER[4];
    set2 : ARRAY_OF INTEGER[4];
BEGIN
  
    sum:=0;
  
   FOR i FROM 0 TO set1.length-1 STEP1 DO
       IF(h.lookup(set1[i]=true)) THEN
       count:=h.get(set1[i])
       h.insert(set1[i],count+1)
         ELSE
        h.insert(set1[i],1);
       END_IF
   END_FOR
   FOR i FROM 0 TO set2.length-1 STEP1  DO
       IF(h.lookup(set2[i]=true)) THEN
       count:=h.get(set2[i])
       h.insert(set2[i],count+1)
         ELSE
        h.insert(set2[i],1);
       END_IF
   END_FOR

   FOR i FROM 0 TO set1.length-1 STEP1 DO
        IF (h.get(set1[i])=1) THEN
            sum=sum+set1[i]
        END_IF   
   END_FOR
   

 writeln("sum is ",sum)

END